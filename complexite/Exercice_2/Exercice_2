Question:

Quelle est la complexité de cet algorithme ? Expliquez pourquoi!

Réponse:

# 1. Création de l'équation
C1 + C2 + C3 + C4 * (n + 1) + C5 * n + C6 * (n + 1) + C7 * n + C8
# 2. Mettre toutes les constantes multiplicatives à 1
C1 + C2 + C3 + 1 * (n + 1) + 1 * n + 1 * (n + 1) + 1 * n + C8
# 3. Supprimer toutes les constantes additives à 1
1 * (n + 1) + 1 * n + 1 * (n + 1) + 1 * n
# 4. Réduire / simplifier de manière mathématique
n + 1 + n + n + 1 + n
4n + 2
# 5. Lorsque l'on ne peut plus simplifier de manière mathématique, il faut à nouveau simplifier de manière informatique
n

Complexité réelle de l'algorithme : T(n) = 4n + 2
Complexité asymptotique de l'algorithme : T(n) = O(n)

La complexité est linéairement proportionnelle à la taille de n
car les variables itératives i et j sont incrémentées de 1 à chaque tour de boucles.
Comme chaque boucle dépend de la taille de n et qu'elle ne sont pas comprises les unes dans les autres,
il est possible de simplifier la complexité à O(n)
